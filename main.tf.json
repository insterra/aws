{
  "variable": {
    "identifier": {},
    "aws_region": {},
    "aws_access_key": {},
    "aws_secret_key": {},
    "instellar_host": {},
    "instellar_auth_token": {}
  },
  "provider": {
    "aws": {
      "region": "${var.aws_region}",
      "access_key": "${var.aws_access_key}",
      "secret_key": "${var.aws_secret_key}"
    },
    "instellar": {
      "host": "${var.instellar_host}",
      "auth_token": "${var.instellar_auth_token}"
    }
  },
  "module": {
    "storage_s3": {
      "source": "upmaru/instellar/aws//modules/storage",
      "version": "~> 0.9",
      "bucket_name": "${var.identifier}",
      "blueprint": "${var.identifier}"
    },
    "networking_foundation": {
      "source": "upmaru/instellar/aws//modules/network",
      "version": "~> 0.9",
      "identifier": "${var.identifier}",
      "blueprint": "${var.identifier}",
      "region": "${var.aws_region}",
      "vpc_ip_range": "10.0.0.0/16",
      "public_subnet_cidrs": ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
    },
    "compute_primary": {
      "source": "upmaru/instellar/aws",
      "version": "~> 0.9",
      "vpc_id": "${module.networking_foundation.vpc_id}",
      "public_subnet_ids": "${module.networking_foundation.public_subnet_ids}",
      "vpc_ip_range": "${module.networking_foundation.vpc_ip_range}",
      "network_dependencies": "${module.networking_foundation.dependencies}",
      "region": "${var.aws_region}",
      "identifier": "orion",
      "blueprint": "${var.identifier}",
      "node_size": "t3a.medium",
      "bastion_size": "t3a.micro",
      "bastion_ssh": true,
      "balancer": true,
      "balancer_ssh": true,
      "balancer_deletion_protection": false,
      "global_accelerator": false,
      "publicly_accessible": true,
      "ssm": true,
      "node_detail_revision": 1,
      "cluster_topology": [
        {"id": 1, "name": "01", "size": "t3a.medium"},
        {"id": 2, "name": "02", "size": "t3a.medium"}
      ],
      "volume_type": "gp3",
      "storage_size": 40,
      "ssh_keys": [
        "zack-studio",
        "zack-mbp"
      ]
    },
    "compute_secondary": {
      "source": "upmaru/instellar/aws",
      "version": "~> 0.9",
      "vpc_id": "${module.networking_foundation.vpc_id}",
      "public_subnet_ids": "${module.networking_foundation.public_subnet_ids}",
      "vpc_ip_range": "${module.networking_foundation.vpc_ip_range}",
      "network_dependencies": "${module.networking_foundation.dependencies}",
      "region": "${var.aws_region}",
      "identifier": "milkyway",
      "blueprint": "${var.identifier}",
      "node_size": "t3a.medium",
      "bastion_size": "t3a.micro",
      "bastion_ssh": true,
      "balancer": true,
      "balancer_ssh": true,
      "balancer_deletion_protection": false,
      "global_accelerator": false,
      "publicly_accessible": true,
      "ssm": true,
      "node_detail_revision": 1,
      "cluster_topology": [
        {"id": 1, "name": "01", "size": "t3a.medium"},
        {"id": 2, "name": "02", "size": "t3a.medium"}
      ],
      "volume_type": "gp3",
      "storage_size": 40,
      "ssh_keys": [
        "zack-studio",
        "zack-mbp"
      ]
    },
    "database_postgresql": {
      "source": "upmaru/instellar/aws//modules/database",
      "version": "~> 0.9",
      "identifier": "perceptual",
      "blueprint": "${var.identifier}",
      "region": "${var.aws_region}",
      "db_size": "db.t3.small",
      "db_name": "instellardb",
      "db_username": "instellar",
      "engine": "postgres",
      "engine_version": "15",
      "port": 5432,
      "subnet_ids": "${module.networking_foundation.public_subnet_ids}",
      "manage_credential_with_secret": true,
      "security_group_ids": [
        "${module.compute_primary.nodes_security_group_id}",
        "${module.compute_primary.bastion_security_group_id}",
        "${module.compute_secondary.nodes_security_group_id}"
      ],
      "nodes_iam_roles": [
        "${module.compute_primary.nodes_iam_role}",
        "${module.compute_secondary.nodes_iam_role}"
      ],
      "vpc_id": "${module.networking_foundation.vpc_id}",
      "deletion_protection": false,
      "skip_final_snapshot": true
    },
    "bucket_generator": {
      "source": "upmaru/instellar/aws//modules/bucket",
      "version": "~> 0.9",
      "identifier": "bucketeer",
      "blueprint": "${var.identifier}",
      "region": "${var.aws_region}"
    },
    "link_storage_s3": {
      "source": "upmaru/bootstrap/instellar//modules/storage",
      "version": "~> 0.8",
      "bucket": "${module.storage_s3.name}",
      "region": "${var.aws_region}",
      "host": "${module.storage_s3.host}",
      "access_key": "${module.storage_s3.access_key_id}",
      "secret_key": "${module.storage_s3.secret_access_key}"
    },
    "link_compute_primary": {
      "source": "upmaru/bootstrap/instellar",
      "version": "~> 0.8",
      "cluster_name": "${module.compute_primary.identifier}",
      "region": "${var.aws_region}",
      "provider_name": "aws",
      "cluster_address": "${module.compute_primary.cluster_address}",
      "password_token": "${module.compute_primary.trust_token}",
      "uplink_channel": "develop",
      "kit_slug": "lite",
      "bootstrap_node": "${module.compute_primary.bootstrap_node}",
      "nodes": "${module.compute_primary.nodes}",
      "balancer": "${module.compute_primary.balancer}"
    },
    "link_compute_secondary": {
      "source": "upmaru/bootstrap/instellar",
      "version": "~> 0.8",
      "cluster_name": "${module.compute_secondary.identifier}",
      "region": "${var.aws_region}",
      "provider_name": "aws",
      "cluster_address": "${module.compute_secondary.cluster_address}",
      "password_token": "${module.compute_secondary.trust_token}",
      "uplink_channel": "develop",
      "kit_slug": "pro",
      "bootstrap_node": "${module.compute_secondary.bootstrap_node}",
      "nodes": "${module.compute_secondary.nodes}",
      "balancer": "${module.compute_secondary.balancer}"
    },
    "link_database_postgresql": {
      "source": "upmaru/bootstrap/instellar//modules/service",
      "version": "~> 0.8",
      "slug": "${module.database_postgresql.identifier}",
      "provider_name": "aws",
      "driver": "database/postgresql",
      "driver_version": "${module.database_postgresql.engine_version}",
      "cluster_ids": [
        "${module.link_compute_primary.cluster_id}",
        "${module.link_compute_secondary.cluster_id}"
      ],
      "channels": ["develop", "master"],
      "certificate": "${module.database_postgresql.certificate_url}",
      "credential": {
        "username": "${module.database_postgresql.username}",
        "password": "${module.database_postgresql.password}",
        "resource": "${module.database_postgresql.db_name}",
        "host": "${module.database_postgresql.address}",
        "port": "${module.database_postgresql.port}",
        "secure": true
      }
    },
    "link_bucket_aws": {
      "source": "upmaru/bootstrap/instellar//modules/service",
      "version": "~> 0.8",
      "slug": "${module.bucket_generator.identifier}",
      "provider_name": "aws",
      "driver": "bucket/aws-s3",
      "driver_version": "${module.bucket_generator.version}",
      "cluster_ids": [
        "${module.link_compute_primary.cluster_id}",
        "${module.link_compute_secondary.cluster_id}"
      ],
      "channels": ["develop", "master"],
      "credential": {
        "username": "${module.bucket_generator.access_key_id}",
        "password": "${module.bucket_generator.secret_access_key}",
        "resource": "${module.bucket_generator.region}",
        "host": "${module.bucket_generator.host}",
        "port": "${module.bucket_generator.port}",
        "secure": true
      }
    }
  }
}